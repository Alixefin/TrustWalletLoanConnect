
generator client {
  provider = "prisma-client-js"
binaryTargets = ["native"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model WalletLog {
  id                      String    @id @default(cuid()) // Unique ID for each log entry
  timestamp               DateTime  @default(now())    // When the log was created
  walletAddress           String    // The connected wallet's address
  connectedWalletName     String?   // e.g., "MetaMask", "Trust Wallet"
  chainId                 Int       // The ID of the connected chain
  chainName               String    // The name of the connected chain
  ipAddress               String?   // User's IP address
  domain                  String?   // Domain from which connection originated
  userAgent               String?   // User-Agent string for device/browser detection

  // Real-time asset data (fields that will be populated by blockchain APIs)
  nativeBalanceEth        String?   // Native balance (e.g., "0.017 ETH")
  tokens                  Json?     // Store as JSON array of { symbol, amount, valueUsd }
  nftsDetected            Boolean   @default(false)
  totalWalletValueUsd     String?   // Total USD value
  mostExpensiveTokenSymbol String?
  mostExpensiveTokenValueUsd String?
  mostExpensiveTokenContractAddress String?
  mostExpensiveTokenChainName String?

  @@map("wallet_logs") // Optional: map to a specific table name in DB
}

// You might also add models for users, transactions, etc., as your app grows.